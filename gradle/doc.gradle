/*
 * Copyright (c) 2015 SONATA-NFV, 2017 5GTANGO [, ANY ADDITIONAL AFFILIATION]
 * ALL RIGHTS RESERVED.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Neither the name of the SONATA-NFV, 5GTANGO [, ANY ADDITIONAL AFFILIATION]
 * nor the names of its contributors may be used to endorse or promote
 * products derived from this software without specific prior written
 * permission.
 *
 * This work has been performed in the framework of the SONATA project,
 * funded by the European Commission under Grant number 671517 through
 * the Horizon 2020 and 5G-PPP programmes. The authors would like to
 * acknowledge the contributions of their colleagues of the SONATA
 * partner consortium (www.sonata-nfv.eu).
 *
 * This work has been performed in the framework of the 5GTANGO project,
 * funded by the European Commission under Grant number 761493 through
 * the Horizon 2020 and 5G-PPP programmes. The authors would like to
 * acknowledge the contributions of their colleagues of the 5GTANGO
 * partner consortium (www.5gtango.eu).
 */

apply plugin: 'io.github.swagger2markup'
apply plugin: 'com.github.jruby-gradle.base'
apply plugin: 'org.asciidoctor.convert'

def asciiDocInputDir = file('src/docs/developer-guide')
def asciiDocOutputDir = file('build/docs/developer-guide')


convertSwagger2markup {
    swaggerInput file("src/main/resources/static/swagger.json").getAbsolutePath()
    outputDir asciiDocOutputDir
    config = ['swagger2markup.markupLanguage' : 'ASCIIDOC',
              'swagger2markup.pathsGroupedBy' : 'TAGS',
              'swagger2markup.extensions.dynamicDefinitions.contentPath' : file(new File(asciiDocInputDir,'extensions/definitions')).absolutePath,
              'swagger2markup.extensions.dynamicOverview.contentPath' : file(new File(asciiDocInputDir,'extensions/overview')).absolutePath,
              'swagger2markup.extensions.dynamicPaths.contentPath' : file(new File(asciiDocInputDir,'extensions/paths')).absolutePath,
              'swagger2markup.extensions.dynamicSecurity.contentPath' : file(new File(asciiDocInputDir,'extensions/security')).absolutePath]
}


dependencies {
    // add converters and extensions using `asciidoctor` configuration
    asciidoctor 'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.15'
    gems 'rubygems:asciidoctor-diagram:1.5.4'
}


asciidoctor {
    dependsOn convertSwagger2markup
    dependsOn jrubyPrepare
    requires = ['asciidoctor-diagram']
    gemPath = jrubyPrepare.outputDir
    sourceDir asciiDocInputDir
    outputDir asciiDocOutputDir
    sources {
        include 'index.adoc'
    }
    backends = ['html5','pdf']
    attributes = [
            doctype: 'book',
            toc: 'left',
            toclevels: '3',
            'imagesdir': 'images',
            numbered: '',
            sectlinks: '',
            sectanchors: '',
            hardbreaks: '',
            generated: asciiDocOutputDir
    ]
}

// ./gradlew convertSwagger2markup
// ./gradlew asciidoctor

check.dependsOn asciidoctor